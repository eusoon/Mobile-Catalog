package my.com.infopro.ifx;

import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.UUID;

import my.com.infopro.ifx.element.BinData;
import my.com.infopro.ifx.element.BinLength;
import my.com.infopro.ifx.element.ClientApp;
import my.com.infopro.ifx.element.ClientDt;
import my.com.infopro.ifx.element.ContextRqHdr;
import my.com.infopro.ifx.element.CredentialsRqHdr;
import my.com.infopro.ifx.element.CryptPswd;
import my.com.infopro.ifx.element.CryptType;
import my.com.infopro.ifx.element.Environment;
import my.com.infopro.ifx.element.LoginName;
import my.com.infopro.ifx.element.MsgRqHdr;
import my.com.infopro.ifx.element.Name;
import my.com.infopro.ifx.element.Org;
import my.com.infopro.ifx.element.POSLocation;
import my.com.infopro.ifx.element.PointOfServiceData;
import my.com.infopro.ifx.element.Pswd;
import my.com.infopro.ifx.element.RqUID;
import my.com.infopro.ifx.element.SecToken;
import my.com.infopro.ifx.element.SecTokenLogin;
import my.com.infopro.ifx.element.SubjectPswd;
import my.com.infopro.ifx.element.SubjectRole;
import my.com.infopro.ifx.element.SvcIdent;
import my.com.infopro.ifx.element.SvcProviderName;
import my.com.infopro.ifx.element.Version;
import my.com.infopro.mobile.client.Configuration;
import my.com.infopro.mobile.client.InfoproMobile;
import my.com.infopro.mobile.client.LoggedUser;
import my.com.infopro.mobile.client.model.GeneralData;
import my.com.infopro.mobile.client.model.InitialData;

public class IFX {
	public static RqUID getRqUID(String prefix){
		RqUID rqUID=new RqUID();
		StringBuilder sbRqUID=new StringBuilder(prefix);
      	rqUID.setString(sbRqUID.append("-").append(UUID.randomUUID().toString()).toString());
		return rqUID;
	}
	public static MsgRqHdr getMsgRqHdr(LoggedUser loggedUser){
    	GeneralData generalData=InfoproMobile.get().getGeneralData();
    	MsgRqHdr msgRqHdr = new MsgRqHdr();
    	InitialData initialData=loggedUser.getInitialData();
    	
    	String username=loggedUser.getPrincipal();
    	String svcProviderURL=initialData.getSvcProviderName();
    	
		SvcIdent svcIdent = new SvcIdent();
		SvcProviderName svcProviderName = new SvcProviderName();
		svcProviderName.setString(svcProviderURL);
		svcIdent.setSvcProviderName(svcProviderName);
		msgRqHdr.setSvcIdent(svcIdent);

		CredentialsRqHdr[] credentialsRqHdr = new CredentialsRqHdr[1];

		SubjectRole subjectRole = SubjectRole.Party;

		SecTokenLogin secToken1 = new SecTokenLogin();
		LoginName loginName = new LoginName();
		loginName.setString(username);
		
		secToken1.setLoginName(loginName);
		SubjectPswd subjectPswd = new SubjectPswd();
		String password=loggedUser.getPassword();
		if (initialData.getCryptType().equals(CryptType.None)) {
			Pswd pswd = new Pswd();
			pswd.setString(password);
			subjectPswd.setPswd(pswd);
		} else {
			CryptPswd cryptPswd = new CryptPswd();
			BinData binData=new BinData();
			binData.setString(password);
			cryptPswd.setBinData(binData);
			BinLength binLength=new BinLength();
			binLength.setString(Integer.toString(password.length()));
			cryptPswd.setBinLength(binLength);
			subjectPswd.setCryptPswd(cryptPswd);
		}
		secToken1.setSubjectPswd(subjectPswd);

		SecToken[] secTokens = new SecToken[1];
		secTokens[0] = secToken1;
		credentialsRqHdr[0].setSubjectRole(subjectRole);
		credentialsRqHdr[0].setSecToken(secTokens);
		msgRqHdr.setCredentialsRqHdr(credentialsRqHdr);

		ContextRqHdr contextRqHdr = new ContextRqHdr();
		PointOfServiceData pointOfServiceData = new PointOfServiceData();
		pointOfServiceData.setEnvironment(Environment.MCommerce);
		pointOfServiceData.setPOSLocation(POSLocation.Customer);
		contextRqHdr.setPointOfServiceData(pointOfServiceData);
		ClientDt clientDt = new ClientDt();
		DateFormat df = new SimpleDateFormat(initialData.getDateFormat());//"yyyy-mm-ddThh:mm:ss"
		// formatted as per ISO 8601
		String strDate = df.format(new Date());
		clientDt.setString(strDate);
		contextRqHdr.setClientDt(clientDt);
		

		ClientApp clientApp = new ClientApp();
		Name name = new Name();
		name.setString(generalData.getApplicationName());
		clientApp.setName(name);
		Org org = new Org();
		org.setString(Configuration.ORG_NAME);
		clientApp.setOrg(org);
		Version version = new Version();
		version.setString(generalData.getApplicationVersion());
		clientApp.setVersion(version);
		contextRqHdr.setClientApp(clientApp);
		msgRqHdr.setContextRqHdr(contextRqHdr);
		return msgRqHdr;
    }
}
