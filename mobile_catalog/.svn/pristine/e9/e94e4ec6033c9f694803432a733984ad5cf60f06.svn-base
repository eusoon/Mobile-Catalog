<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE module PUBLIC "-//Google Inc.//DTD Google Web Toolkit 2.5.0//EN" "http://google-web-toolkit.googlecode.com/svn/tags/2.5.0/distro-source/core/src/gwt-module.dtd">
<module  rename-to="api">
	<inherits name="com.google.gwt.user.User" />
	<inherits name='com.googlecode.gwtphonegap.PhoneGap' />
	<inherits name='com.google.gwt.uibinder.UiBinder' />
	<inherits name='com.google.gwt.user.theme.standard.Standard' />
	<inherits name="com.google.gwt.i18n.CldrLocales"/>
	<inherits name="my.com.infopro.mobile.IFXJson" />
	<inherits name="my.com.infopro.IFX" />
	<inherits name='my.com.infopro.mobile.FormFactor'/>
	<inherits name="java.Util" />
	<inherits name="java.Net" />
	<inherits name="com.googlecode.gwt.crypto.Crypto" />
	<inherits name='com.sahandrc.calendar.GWTPersianCalendar' />
	<inherits name="com.google.code.gwt.geolocation.Html5Geolocation" />
	<inherits name="com.google.code.gwt.database.Html5Database" />
	<inherits name='com.googlecode.mgwt.MGWT'/>
	<inherits name='com.mvp4g.Mvp4gModule'/>
	<set-property name="user.agent" value="safari" />
	<inherits name="com.bigoloo.gwt.jalaliwidget.jalaliwidget" />
	<!-- For production, most teams prefer to set the default log level to `OFF` 
  	<inherits name="com.allen_sauer.gwt.log.gwt-log-OFF"/>
  	 -->
  	
  	<!-- For development, a default of `DEBUG` is recommended -->
  	<inherits name="com.allen_sauer.gwt.log.gwt-log-DEBUG" />
    <!-- To compile at `DEBUG`, `WARN` and `OFF` log levels (with a 3x compile time cost) 
    <inherits name="com.allen_sauer.gwt.log.gwt-log-OFF"/>
    <extend-property name="log_level" values="DEBUG,WARN"/>
     -->
    
     <!-- 
     	Default to `OFF`, but allow selection of a specific log level,
     	say `INFO`, via the `log_level` URL parameter:
     	http[s]://hostame:port/yourmodule/Yourmodule.html?log_level=INFO
  	 
  	<inherits name="com.allen_sauer.gwt.log.gwt-log-OFF" />
  	<extend-property name="log_level" values="INFO"/>
  	-->
  	<!-- 
     	Compile both `DEBUG` and `ERROR` log levels, with level
     	selection via a `gwt:property` meta tag in your HTML page:
       		<head>
         		<title>....</title>
         		<meta name="gwt:property" content="log_level=DEBUG">
       		</head>
  	
  	<inherits name="com.allen_sauer.gwt.log.gwt-log-ERROR" />
  	<extend-property name="log_level" values="DEBUG"/>
  	-->
	<source path="client" />

	<entry-point class="my.com.infopro.mobile.client.InfoproMobile" />
	<replace-with class="my.com.infopro.mobile.client.services.AccessServiceImpl">
		<when-type-is class="my.com.infopro.mobile.client.services.AccessService"/>
	</replace-with>
	<replace-with class="my.com.infopro.mobile.client.services.AccountServiceImpl">
	    <when-type-is class="my.com.infopro.mobile.client.services.AccountService"/>
	</replace-with>
	<replace-with class="my.com.infopro.mobile.client.services.ContactServiceImpl">
	    <when-type-is class="my.com.infopro.mobile.client.services.ContactService"/>
	</replace-with>
	<replace-with class="my.com.infopro.mobile.client.services.ConfigurationServiceImpl">
		<when-type-is class="my.com.infopro.mobile.client.services.ConfigurationService"/>
	</replace-with>
	<replace-with class="my.com.infopro.mobile.client.services.GeneralServiceImpl">
		<when-type-is class="my.com.infopro.mobile.client.services.GeneralService"/>
	</replace-with>
	<replace-with class="my.com.infopro.mobile.client.services.PaymentServiceImpl">
		<when-type-is class="my.com.infopro.mobile.client.services.PaymentService"/>
	</replace-with>	
	<replace-with class="my.com.infopro.mobile.client.services.UserServiceImpl">
		<when-type-is class="my.com.infopro.mobile.client.services.UserService"/>
	</replace-with>	
	<replace-with class="my.com.infopro.mobile.client.services.SvcServiceImpl">
		<when-type-is class="my.com.infopro.mobile.client.services.SvcService"/>
	</replace-with>
	<replace-with class="my.com.infopro.mobile.client.services.ServiceProviderServiceImpl">
		<when-type-is class="my.com.infopro.mobile.client.services.ServiceProviderService"/>
	</replace-with>	
	<replace-with class="my.com.infopro.mobile.client.services.XferServiceImpl">
		<when-type-is class="my.com.infopro.mobile.client.services.XferService"/>
	</replace-with>
	  <!-- Use MobileWebAppShellDesktopImpl by default -->
  <replace-with class="my.com.infopro.mobile.client.app.MobileWebAppShellDesktopImpl">
    <when-type-is class="my.com.infopro.mobile.client.app.MobileWebAppShellClientFactory"/>
  </replace-with>

  <!-- Use MobileWebAppShellPhoneImpl for mobile form factor. -->
  <replace-with class="my.com.infopro.mobile.client.app.MobileWebAppShellPhoneImpl">
    <when-type-is class="my.com.infopro.mobile.client.app.MobileWebAppShellClientFactory"/>
    <when-property-is name="formfactor" value="mobile"/>
  </replace-with>

  <!-- Use MobileWebAppShellTabletImpl for tablet form factor. -->
  <replace-with class="my.com.infopro.mobile.client.app.MobileWebAppShellTabletImpl">
    <when-type-is class="my.com.infopro.mobile.client.app.MobileWebAppShellClientFactory"/>
    <when-property-is name="formfactor" value="tablet"/>
  </replace-with>
 
	<extend-property name="locale" values="en,nl,es,pt,it,de,fr,ru,el,zh,ja,cs,fa"/>
   	<set-property-fallback name="locale" value="en"/>
   	<set-property name="locale" value="en,nl,es,pt,it,de,fr,ru,el,zh,ja,cs,fa"/>			
	<set-property name="gwt.logging.popupHandler" value="DISABLED" />
	<set-property name="gwt.logging.enabled" value="FALSE" />

	<set-property name="phonegap.env" value="yes" />		
	<add-linker name="xsiframe"/>
	<set-configuration-property name="devModeRedirectEnabled" value="true"/>
</module>