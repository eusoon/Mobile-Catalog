package my.com.infopro.mobile.client.ifx.element;

import my.com.infopro.mobile.client.ifx.basetypes.IFXObject;

public class PmtCreditDetail extends IFXObject {

	//begin-or	Required
	DebtorCurAmt debtorCurAmt; //Aggregate	Required	The credit amount, expressed in the currency of the debtor account.
	CreditorCurAmt creditorCurAmt; //Aggregate	Required	The equivalent amount in the currency to be credited.
	//end-or
	UltimateDebtorData ultimateDebtorData; //Aggregate	Optional	Party that is ultimately responsible for the payment, if different than the Debtor. May vary at the credit level, i.e. one debtor may be paying from their account on behalf of several parties; the ultimate debtor would be indicated for each credit.
	CreditorData creditorData; //Aggregate	Required	Party that owns the account to be credited.
	UltimateCreditorData ultimateCreditorData; //Aggregate	Optional	Party that is ultimately receiving the payment; end beneficiary, if different than the Creditor.
	ToAcctKeys toAcctKeys; //Aggregate	Optional	Account that is receiving the payment, i.e. account to be credited.
	RemitRef remitRef; //Aggregate	Optional	Provides a reference to or includes the remittance data associated with this credit side of the payment.
	Category category; //C-40	Optional	Payer-assigned category for this credit side of the payment.
	ForExDealKeys forExDealKeys; //Aggregate	Optional	Reference to a foreign exchange deal (contract) for this credit side of the payment
	PmtRefIdent pmtRefIdent; //NC-36	Optional	Payment reference identifier. Identifier for this credit side of the payment. Generated by the Payer, typically by the Accounts Payable system.
	
	public DebtorCurAmt getDebtorCurAmt() {
		return debtorCurAmt;
	}
	public void setDebtorCurAmt(DebtorCurAmt debtorCurAmt) {
		this.debtorCurAmt = debtorCurAmt;
	}
	public CreditorCurAmt getCreditorCurAmt() {
		return creditorCurAmt;
	}
	public void setCreditorCurAmt(CreditorCurAmt creditorCurAmt) {
		this.creditorCurAmt = creditorCurAmt;
	}
	public UltimateDebtorData getUltimateDebtorData() {
		return ultimateDebtorData;
	}
	public void setUltimateDebtorData(UltimateDebtorData ultimateDebtorData) {
		this.ultimateDebtorData = ultimateDebtorData;
	}
	public CreditorData getCreditorData() {
		return creditorData;
	}
	public void setCreditorData(CreditorData creditorData) {
		this.creditorData = creditorData;
	}
	public UltimateCreditorData getUltimateCreditorData() {
		return ultimateCreditorData;
	}
	public void setUltimateCreditorData(UltimateCreditorData ultimateCreditorData) {
		this.ultimateCreditorData = ultimateCreditorData;
	}
	public ToAcctKeys getToAcctKeys() {
		return toAcctKeys;
	}
	public void setToAcctKeys(ToAcctKeys toAcctKeys) {
		this.toAcctKeys = toAcctKeys;
	}
	public RemitRef getRemitRef() {
		return remitRef;
	}
	public void setRemitRef(RemitRef remitRef) {
		this.remitRef = remitRef;
	}
	public Category getCategory() {
		return category;
	}
	public void setCategory(Category category) {
		this.category = category;
	}
	public ForExDealKeys getForExDealKeys() {
		return forExDealKeys;
	}
	public void setForExDealKeys(ForExDealKeys forExDealKeys) {
		this.forExDealKeys = forExDealKeys;
	}
	public PmtRefIdent getPmtRefIdent() {
		return pmtRefIdent;
	}
	public void setPmtRefIdent(PmtRefIdent pmtRefIdent) {
		this.pmtRefIdent = pmtRefIdent;
	}
	
}
